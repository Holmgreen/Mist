package GameState;

import java.awt.Graphics2D;

import Audio.JukeBox;
import NPCs.LabNPC;
import NPCs.NPC;
import Tiles.Tile;

public class HomeWorld extends WorldState {
    private int entrancex;
    private int entrancey;

    private NPC labnpc;

    public HomeWorld(GameStateManager gsm) {
	super(gsm);
    }

    public void init() {
	super.init();
	JukeBox.load("/Music/homeworldmusic.mp3", "homeworldmusic");
	JukeBox.loop("homeworldmusic");
	bgmusic = "homeworldmusic";
	map.loadMap("/Worlds/homeworld.txt");
	map.loadTiles("/Tiles/tileset32.png");
	map.setTween(1);

	exitState[WEST] = GameStateManager.WORLD1STATE;
	setWestExit();
	setEntrancePos();
	int prevState = gsm.getPreviousState();
	if (prevState == GameStateManager.HOMEHOUSESTATE) {
	    ooru.setPosition(entrancex, entrancey + 32);
	} else {
	    ooru.setPosition(startx[WEST] + map.getTileSize(), starty[WEST]);
	}

	npcs = new NPC[1];
	populateNpcs();
    }

    public void populateNpcs() {
	labnpc = new LabNPC(map);
	labnpc.setPosition(525, 941);
	//labnpc.setPosition(startx[WEST] + map.getTileSize() + 20, starty[WEST] + 50);
	npcs[0] = labnpc;
    }

    public void update() {
	super.update();
	checkWestExit();
	checkEntrance();
    }

    private void setEntrancePos() {
	for (int col = 0; col < map.getNumCols(); col++) {
	    for (int row = 0; row < map.getNumRows(); row++) {
		if (map.getType(row, col) == Tile.ENTRANCE) {
		    entrancey = row * map.getTileSize();
		    entrancex = col * map.getTileSize();
		    break;
		}
	    }
	}
    }

    public void checkEntrance() {
	Tile tile = map.getTile(ooru.getCurrentRow(), ooru.getCurrentCol());
	if (tile == null) {
	    return;
	}
	if (tile.getType() == Tile.ENTRANCE) {
	    JukeBox.stop("homeworldmusic");
	    gsm.setState(tile.getEntranceState());
	}
    }
    
    
    public void draw(Graphics2D g) {
	super.draw(g);
    }
}
